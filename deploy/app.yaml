# 创建命名空间，无 sidecar 注入
apiVersion: v1
kind: Namespace
metadata:
  name: dubbo
  labels:
    istio-injection: enabled
spec:
  finalizers:
    - kubernetes

---
# hello-dubbo-provider 服务
apiVersion: v1
kind: Service
metadata:
  name: hello-dubbo-provider
  namespace: dubbo
  labels:
    name: hello-dubbo-provider
spec:
  ports:
  - name: dubbo-http-rpc
    protocol: TCP
    port: 20880
    targetPort: 20880
  selector:
    app: hello-dubbo-provider


---
# 部署 hello-dubbo-provider
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: hello-dubbo-provider
#  namespace: dubbo
#  labels:
#    app: hello-dubbo-provider
#    version: v1
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: hello-dubbo-provider
#      version: v1
#  template:
#    metadata:
#      labels:
#        app: hello-dubbo-provider
#        version: v1
#    spec:
#      containers:
#        - name: hello-dubbo-provider
#          image: tencent-cloud-one-docker.pkg.coding.net/xyz-demo/images/hello-dubbo-provider:1.0.4
#          command: ["java","-jar","hello-dubbo-provider-fat.jar"]
#          ports:
#            - containerPort: 20880
#              protocol: TCP
---
# 部署 hello-dubbo-provider v2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-dubbo-provider-v2
  namespace: dubbo
  labels:
    app: hello-dubbo-provider
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-dubbo-provider
      version: v2
  template:
    metadata:
      labels:
        app: hello-dubbo-provider
        version: v2
    spec:
      containers:
        - name: hello-dubbo-provider
          image: tencent-cloud-one-docker.pkg.coding.net/xyz-demo/images/hello-dubbo-provider:2.0.0-http
          command: ["java","-jar","hello-dubbo-provider-fat.jar"]
          ports:
            - containerPort: 20880
              protocol: TCP

---

# 部署 hello-dubbo-provider v3
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-dubbo-provider-v3
  namespace: dubbo
  labels:
    app: hello-dubbo-provider
    version: v3
spec:
  replicas: 4
  selector:
    matchLabels:
      app: hello-dubbo-provider
      version: v3
  template:
    metadata:
      labels:
        app: hello-dubbo-provider
        version: v3
    spec:
      containers:
        - name: hello-dubbo-provider
          image: tencent-cloud-one-docker.pkg.coding.net/xyz-demo/images/hello-dubbo-provider:3.0.0-http
          command: ["java","-jar","hello-dubbo-provider-fat.jar"]
          ports:
            - containerPort: 20880
              protocol: TCP


---
# 部署 hello-dubbo-consumer
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-dubbo-consumer
  namespace: dubbo
  labels:
    app: hello-dubbo-consumer
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-dubbo-consumer
      version: v1
  template:
    metadata:
      annotations:
#        traffic.sidecar.istio.io/excludeOutboundPorts: "20880"
#        traffic.sidecar.istio.io/excludeInboundPorts: "20880"
      labels:
        app: hello-dubbo-consumer
        version: v1
    spec:
      containers:
        - name: hello-dubbo-consumer
          image: tencent-cloud-one-docker.pkg.coding.net/xyz-demo/images/hello-dubbo-consumer:1.0.3-http
          command: ["java","-jar","hello-dubbo-consumer-fat.jar"]



---
# dubbo 流控
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: hello-vs
  namespace: dubbo
spec:
  hosts:
    - hello-dubbo-provider
  http:
  - match:
    - uri:
      prefix: "/123"
    route:
      - destination:
          host: hello-dubbo-provider
          port:
            number: 20880
          subset: v3
  - route:
    - destination:
        host: hello-dubbo-provider
        port:
          number: 20880
        subset: v2
---
### 定义目标版本

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: hello-subset
  namespace: dubbo
spec:
  host: hello-dubbo-provider
  subsets:
    - name: v2
      labels:
        version: v2
    - name: v3
      labels:
        version: v3
